trigger:
  batch: true
  branches:
    include:
    - '*'
  paths:
    include:
    - infrastructure/*

pool:
  vmImage: 'ubuntu-latest'

variables:
  - template: variables/development.yml
  - name: buildPlatform
    value: 'Any CPU'
  - name: buildConfiguration
    value: 'Release'

stages:
  - stage: development
    condition: and(ne(variables['Build.SourceBranch'], 'refs/heads/main'), not(startsWith(variables['Build.SourceBranch'], 'refs/pull')), ne(variables['Build.Reason'], 'PullRequest'))
    variables:
      - template: variables/development.yml
      
    jobs:
      - job: deploy_landing_zone
        steps:
          - template: steps/lz-deploy-steps.yml
            parameters:
              armPath: 'infrastructure'
              subscriptionId: '$(subscriptionId)'
              subscriptionName: '$(subscriptionName)'
              rgName: '$(rgName)'
              rgLocation: '$(rgLocation)'
              appiName: '$(appiName)'
              kvName: '$(kvName)'
              stName: '$(stName)'
              workName: '$(workName)'

      - job: deploy_infrastructure
        dependsOn: deploy_landing_zone
        steps:
          - template: steps/infrastructure-deploy-steps.yml
            parameters:
              armPath: 'infrastructure'
              subscriptionId: '$(subscriptionId)'
              subscriptionName: '$(subscriptionName)'
              rgName: '$(rgName)'
              rgLocation: '$(rgLocation)'
              planName: '$(planName)'
              planSku: '$(planSku)'
              sqlName: '$(sqlName)'
              sqlDatabase: '$(sqlDatabase)'
              sqlAdminUser: '$(sqlAdminUser)'
              sqlAdminPassword: '$(sqlAdminPassword)'
              webName: '$(webName)'

  - stage: production
    condition: eq(variables['Build.SourceBranch'], 'refs/heads/main')
    variables:
      - template: variables/production.yml    

    jobs:
      - job: deploy_landing_zone
        steps:
          - template: steps/lz-deploy-steps.yml
            parameters:
              armPath: 'infrastructure'
              subscriptionId: '$(subscriptionId)'
              subscriptionName: '$(subscriptionName)'
              rgName: '$(rgName)'
              rgLocation: '$(rgLocation)'
              appiName: '$(appiName)'
              kvName: '$(kvName)'
              stName: '$(stName)'
              workName: '$(workName)'

      - job: deploy_infrastructure
        dependsOn: deploy_landing_zone
        steps:
          - template: steps/infrastructure-deploy-steps.yml
            parameters:
              armPath: 'infrastructure'
              subscriptionId: '$(subscriptionId)'
              subscriptionName: '$(subscriptionName)'
              rgName: '$(rgName)'
              rgLocation: '$(rgLocation)'
              planName: '$(planName)'
              planSku: '$(planSku)'
              sqlName: '$(sqlName)'
              sqlDatabase: '$(sqlDatabase)'
              sqlAdminUser: '$(sqlAdminUser)'
              sqlAdminPassword: '$(sqlAdminPassword)'
              webName: '$(webName)'